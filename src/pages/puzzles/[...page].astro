---
import BaseLayout from "../../layouts/BaseLayout.astro";
import { getCollection } from "astro:content";
import FormattedDate from "../../components/FormattedDate.astro";
import type {
  InferGetStaticParamsType,
  InferGetStaticPropsType,
  GetStaticPaths,
} from "astro";
import Pagination from "../../components/Pagination.astro";

export const getStaticPaths = (async ({ paginate }) => {
  const puzzles = (await getCollection("puzzle")).sort(
    (a, b) => a.data.pubDate.valueOf() - b.data.pubDate.valueOf()
  );

  return paginate(puzzles, { pageSize: 2 });
}) satisfies GetStaticPaths;
type Params = InferGetStaticParamsType<typeof getStaticPaths>;
type Props = InferGetStaticPropsType<typeof getStaticPaths>;
// All paginated data is passed on the "page" prop
const { page } = Astro.props;

const pathname = new URL(Astro.request.url).pathname.split("/");
const basePath = pathname[1];
---

<BaseLayout>
  <section>
    <ul>
      <!--Display the current page number. Astro.params.page can also be used!-->
      <ul>
        {
          page.data.map((puzzle) => (
            <li>
              <a href={`/puzzle/${puzzle.slug}/`}>
                <h4 class="title">{puzzle.data.title}</h4>
                <p class="date">
                  <FormattedDate date={puzzle.data.pubDate} />
                </p>
              </a>
            </li>
          ))
        }
      </ul>
    </ul>
  </section>
  <Pagination
    length={page.lastPage}
    currentUrl={page.url.current}
    currentPage={page.currentPage}
    baseUrl={`/${basePath}`}
    prevUrl={page.url.prev}
    nextUrl={page.url.next}
    lastUrl={`/${basePath}/${page.lastPage}`}
  />
</BaseLayout>
