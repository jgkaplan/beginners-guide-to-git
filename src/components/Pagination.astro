---
import type { Page } from "astro";

interface Props {
  baseUrl: string;
  page: Page;
}

const { page, baseUrl } = Astro.props;

const length = page.lastPage;
const currentUrl = page.url.current;
const currentPage = page.currentPage;
const prevUrl = page.url.prev;
const nextUrl = page.url.next;
const lastUrl = `${baseUrl}${page.lastPage}`;

const paginationList = Array.from(Array(length), (_, i) => i + 1);
---

{page.lastPage > 1 && 
<nav aria-label="Puzzle pages">
  {

    /*
<!-- <div class="pagination">
        {% if paginator.previous_page %}
          <a href="{{ paginator.previous_page_path }}" class="previous">
            Previous
          </a>
        {% endif %}
        <span class="page_number ">
          Page: {{ paginator.page }} of {{ paginator.total_pages }}
        </span>
        {% if paginator.next_page %}
          <a href="{{ paginator.next_page_path }}" class="next">Next</a>
        {% endif %}
      
      </div> -->

    */
  }
  

  {
    (baseUrl == currentUrl+'/' || baseUrl == currentUrl) ? (
      <span>{"<<"}</span>
    ) : (
      <a href={baseUrl}>{"<<"}</a>
    )
  }

  {prevUrl ? <a href={prevUrl}>Previous</a> : <span>Previous</span>}

  {
    paginationList.map((num) =>
      currentPage == num ? (
        <span>{num}</span>
      ) : (
        <a href={`${baseUrl}${num == 1 ? "" : num}`}>{num}</a>
      )
    )
  }
  {
    /*
<!-- <a
 href={`${baseUrl}${num == 1 ? "" : "/" + num}`}
 class={`pagination__link ${currentPage == num ? "disabled active" : ""}`}
>
 {num}
</a> -->
    */
  }
  
  {!nextUrl ? <span>Next</span> : <a href={nextUrl}>Next</a>}

  {lastUrl == currentUrl ? <span>{">>"}</span> : <a href={lastUrl}>{">>"}</a>}
</nav>

<style>
  nav {
    width: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 6px;
  }

  a {
    color: #aa44aa;
  }

  a.current {
  }

  span {
    color: #661166;
  }
</style>
}